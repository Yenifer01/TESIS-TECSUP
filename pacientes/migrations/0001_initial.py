# Generated by Django 4.2.17 on 2025-02-25 21:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActividadFuncional',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('actividades_funcionales', models.CharField(max_length=50, verbose_name='Actividades Funcionales Cotidianas')),
                ('coeficiente', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Coeficiente')),
            ],
            options={
                'verbose_name_plural': 'Actividades Funcionales Cotidianas',
            },
        ),
        migrations.CreateModel(
            name='ActividadMetabolica',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('actividades_metabolicas', models.CharField(max_length=50, verbose_name='Actividad Metabólica')),
                ('coeficiente', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Coeficiente')),
            ],
            options={
                'verbose_name_plural': 'Actividades Metabólicas',
            },
        ),
        migrations.CreateModel(
            name='Fa',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('formula', models.CharField(choices=[('OMS', 'OMS'), ('Harris Benedict', 'Harris Benedict'), ('Schofield', 'Schofield')], max_length=30, verbose_name='Elige una fórmula')),
                ('factor_por', models.CharField(choices=[('Dia', 'Día'), ('Semana', 'Semana')], max_length=30, verbose_name='Factor Por')),
            ],
            options={
                'verbose_name_plural': 'Factor de Actividad por TMB y Peso',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('num_ficha', models.CharField(editable=False, max_length=100, verbose_name='N° Ficha')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('edad', models.IntegerField(verbose_name='Edad')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=10, verbose_name='Género')),
                ('ocupacion', models.CharField(max_length=155, verbose_name='Ocupación')),
                ('alcohol', models.CharField(choices=[('No(-)', 'No(-)'), ('Si(+)', 'Si(+)'), ('Si(++)', 'Si(++)'), ('Si(+++)', 'Si(+++)')], max_length=10, verbose_name='Alcohol')),
                ('tabaco', models.CharField(choices=[('No(-)', 'No(-)'), ('Si(+)', 'Si(+)'), ('Si(++)', 'Si(++)'), ('Si(+++)', 'Si(+++)')], max_length=10, verbose_name='Tabaco')),
                ('numero_cig_dia', models.IntegerField(verbose_name='N° Cig/Dia')),
                ('apetito', models.CharField(choices=[('No(-)', 'No(-)'), ('Si(+)', 'Si(+)'), ('Si(++)', 'Si(++)'), ('Si(+++)', 'Si(+++)')], max_length=10, verbose_name='Apetito')),
                ('horas_sueño', models.IntegerField(verbose_name='Hrs. Sueño')),
                ('sed', models.CharField(choices=[('No(-)', 'No(-)'), ('Si(+)', 'Si(+)'), ('Si(++)', 'Si(++)'), ('Si(+++)', 'Si(+++)')], max_length=10, verbose_name='Sed')),
                ('peso_6_meses', models.IntegerField(verbose_name='Peso/6Meses')),
                ('tipo', models.CharField(choices=[('Caminar lento', 'Caminar lento'), ('Caminar rápido', 'Caminar rápido'), ('Caminar de subida', 'Caminar de subida'), ('Caminar de bajada', 'Caminar de bajada'), ('Subir escaleras', 'Subir escaleras'), ('Ejercicios aeróbicos-Baja intensidad', 'Ejercicios aeróbicos-Baja intensidad'), ('Ejercicios aeróbicos-Alta intensidad', 'Ejercicios aeróbicos-Alta intensidad')], max_length=70, verbose_name='Tipo')),
                ('intensidad', models.CharField(choices=[('Sedentario', 'Sedentario'), ('Sedentario o actividad ligera', 'Sedentario o actividad ligera'), ('Activo o actividad moderada', 'Activo o actividad moderada'), ('Vigoroso o actividad fuerte', 'Vigoroso o actividad fuerte')], max_length=60, verbose_name='Intensidad')),
                ('frecuencia', models.CharField(choices=[('Sin actividad', 'Sin actividad'), ('3 Hrs/Sem', '3 Hrs/Sem'), ('6 Hrs/Sem', '6 Hrs/Sem'), ('4-5 Hrs/Día', '4-5 Hrs/Día')], max_length=50, verbose_name='Frecuencia')),
                ('duracion', models.IntegerField(verbose_name='Duración')),
                ('recomendacion', models.CharField(max_length=10, verbose_name='Recomendación')),
                ('fc_actividad', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Fc. Actividad')),
                ('diabetes', models.CharField(choices=[('DM Familiar', 'DM Familiar'), ('DM Personal', 'DM Personal'), ('Ambos', 'Ambos'), ('Ninguna', 'Ninguna')], max_length=50, verbose_name='Diabetes')),
                ('enf_coronarias', models.CharField(choices=[('(CHD) Familiar', '(CHD) Familiar'), ('(CHD) Personal', '(CHD) Personal'), ('Ambos', 'Ambos'), ('Ninguna', 'Ninguna')], max_length=50, verbose_name='Enf. Coronarias')),
                ('hipertension', models.CharField(choices=[('HTA Familiar', 'HTA Familiar'), ('HTA Personal', 'HTA Personal'), ('Ambos', 'Ambos'), ('Ninguna', 'Ninguna')], max_length=50, verbose_name='Hipertensión')),
                ('obesidad', models.CharField(choices=[('Obesidad Familiar', 'Obesidad Familiar'), ('Obesidad Personal', 'Obesidad Personal'), ('Ambos', 'Ambos'), ('Ninguna', 'Ninguna')], max_length=50, verbose_name='Obesidad')),
                ('dislipidemia', models.CharField(choices=[('Dislipidemia Familiar', 'Dislipidemia Familiar'), ('Dislipidemia Personal', 'Dislipidemia Personal'), ('Ambos', 'Ambos'), ('Ninguna', 'Ninguna')], max_length=50, verbose_name='Dislipidemia')),
                ('peso_actual', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Peso Actual (Kg)')),
                ('talla', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Talla (m)')),
                ('p_brazo_contraido', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='P. Brazo contraido(cm)')),
                ('d_humero', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='D.Húmero (cm)')),
                ('p_pantorrilla', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='P. Pantorilla (cm)')),
                ('d_femur', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='D. Femur (cm)')),
                ('pliegue_suprespinal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Pliegue Suprespinal(mm)')),
                ('pliegue_pantorilla', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Pliegue  Pantorilla(mm)')),
                ('indice_ponderal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Índice Ponderal')),
                ('peso_ideal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Peso Ideal IMC=22.4')),
                ('imc', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='IMC (OMS)')),
                ('tipo_obesidad', models.CharField(max_length=100, verbose_name='Tipo Ob.')),
                ('cir_brazo', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Circ. 1/2 Brazo CB (cm)')),
                ('cintura', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cintura ATP III: ♂ ≥102, ♀ ≥ 88(cm) IDF: ♂ ≥ 98 ♀ ≥ 88')),
                ('p_abdominal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Perímetro Abdominal(cm)')),
                ('cadera', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cadera(cm)')),
                ('recto_leu', models.IntegerField(verbose_name='Rcto. Leu./Ul')),
                ('icc', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='ICC: ≥ ♂ 0.95 ♀ ≥ 85')),
                ('ice', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='ICE: ♂ ♀ > 0.5')),
                ('circunferencia_carpo', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Circunferencia del Carpo (cm)')),
                ('albumina', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Albumina (g/dL)')),
                ('pliegue_triccipital', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Pliegue Triccipital (mm)')),
                ('obesidad_central', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], default='No', max_length=2, verbose_name='Obesidad Central (Obc)')),
                ('pliegue_biccipital', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Pliegue Biccipital(mm)')),
                ('trigliceridos', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Triglicéridos')),
                ('pliegue_subescapular', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Pliegue Subescapular(mm)')),
                ('c_HDL', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='c-HDL')),
                ('pliegue_suprailiaco', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Pliegue Suprailiaco(mm)')),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
            ],
            options={
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.CreateModel(
            name='ResumenTmbPeso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_calorias_actividad_tmb', models.IntegerField(verbose_name='Total Kcal(Actividad vs TMB)')),
                ('coeficiente_actividad_tmb', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='CAF(Actividad vs TMB)')),
                ('total_calorias_peso_actividad', models.IntegerField(verbose_name='Total Kcal(Peso vs Actividad)')),
                ('coeficiente_peso_actividad', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='CAF(Peso vs Actividad)')),
                ('fa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fa_resumen', to='pacientes.fa')),
            ],
            options={
                'verbose_name_plural': 'Resumen',
            },
        ),
        migrations.CreateModel(
            name='FaActividadMetabolica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_horas', models.IntegerField(verbose_name='Cantidad de Horas')),
                ('horas_totales', models.IntegerField(verbose_name='Horas Totales')),
                ('total_horas', models.IntegerField(verbose_name='Total Horas')),
                ('fraccion_tiempo', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Fracción de Tiempo')),
                ('coeficiente', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Coeficiente')),
                ('subfactor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Subfactor')),
                ('reb', models.IntegerField(verbose_name='REB')),
                ('energia_actividad', models.IntegerField(verbose_name='Energía x Actividad')),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actividades_metabolicas_fa', to='pacientes.actividadmetabolica')),
                ('fa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fa_actividades_metabolicas', to='pacientes.fa')),
            ],
            options={
                'verbose_name_plural': 'Gasto energético Total.(Factor de Actividad vs TMB)',
            },
        ),
        migrations.CreateModel(
            name='FaActividadFuncional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_horas', models.IntegerField(verbose_name='Cantidad de Horas')),
                ('horas_totales', models.IntegerField(verbose_name='Horas Totales')),
                ('total_horas', models.IntegerField(verbose_name='Total Horas')),
                ('coeficiente', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Coeficiente')),
                ('energia_actividad', models.IntegerField(verbose_name='Energía x Actividad')),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actividades_funcionales_fa', to='pacientes.actividadfuncional')),
                ('fa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fa_actividades_funcionales', to='pacientes.fa')),
            ],
            options={
                'verbose_name_plural': 'Gasto energético Total. (Peso vs Factor de actividad)',
            },
        ),
        migrations.AddField(
            model_name='fa',
            name='actividades_funcionales',
            field=models.ManyToManyField(related_name='fa_funcionales', through='pacientes.FaActividadFuncional', to='pacientes.actividadfuncional'),
        ),
        migrations.AddField(
            model_name='fa',
            name='actividades_metabolicas',
            field=models.ManyToManyField(related_name='fa_metabolicas', through='pacientes.FaActividadMetabolica', to='pacientes.actividadmetabolica'),
        ),
        migrations.AddField(
            model_name='fa',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pacientes.paciente'),
        ),
    ]
